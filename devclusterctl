#!/usr/bin/env sh

SCRIPT_NAME=$(basename $0)
SCRIPT_DIR=$(dirname $0)
BASE_DIR=$SCRIPT_DIR
TMP_DIR="$BASE_DIR/.tmp"
CONFIG_DIR="$BASE_DIR/config"
KIND_CONFIG="$CONFIG_DIR/kind-config.yaml"
HELMSMAN_CONFIG="$CONFIG_DIR/helmsman.yaml"

validate_variables () {
  if [ -z "${K8S_DEV_CLUSTER_NAME}" ]; then
    echo 'K8S_DEV_CLUSTER_NAME variable not set'
    exit 1
  fi
}

update_cluster () {
  validate_variables
  echo "Updating cluster..."
  local final_config="$TMP_DIR/helmsman-$K8S_DEV_CLUSTER_NAME.yaml"
  cat "$HELMSMAN_CONFIG" | envsubst '$K8S_DEV_CLUSTER_NAME' > $final_config \
    && helmsman -f $final_config --apply
}

start_cluster () {
  validate_variables
  echo "Starting cluster..."
  local final_config="$TMP_DIR/kind-config-$K8S_DEV_CLUSTER_NAME.yaml"
  cat "$KIND_CONFIG" | envsubst '$K8S_DEV_CLUSTER_NAME' > $final_config \
    && kind create cluster --config $final_config
}

delete_cluster () {
  validate_variables
  read -p "Cluster $K8S_DEV_CLUSTER_NAME will be removed. Continue [Yy]? " choice
  case $choice in
    [Yy]*) ;;
    *) exit 0
  esac
  echo "Deleting cluster..."
  kind delete cluster --name "$K8S_DEV_CLUSTER_NAME"
}

forward_ports () {
  echo "Forwarding ports..."
  echo "* http: $1 -> 80"
  echo "* https: $2 -> 443"
  kubectl port-forward -n nginx-ingress service/nginx-ingress-controller $1:80 $2:443
}

print_usage () {
  echo "Usage: $SCRIPT_NAME <operation>"
  echo ""
  echo "Most operations require K8S_DEV_CLUSTER_NAME env. variable to be set with" \
    " a name of the cluster."
  echo ""
  echo "Oparations:"
  echo "init - initializes (creates and updates) cluster"
  echo "delete - removes cluster"
  echo "update - update state of a cluster"
  echo "recreate - combination of delete + init"
  echo "ports-fwd <80 port mapping> <443 port mapping> - forwarding cluster ports"
}

mkdir -p $TMP_DIR
case $1 in
  init) start_cluster && update_cluster ;;
  delete) delete_cluster ;;
  update) update_cluster ;;
  recreate) delete_cluster && start_cluster && update_cluster ;;
  ports-fwd) forward_ports ${2:-0} ${3:-0} ;;
  *) echo "ERROR: Unknown operation \"$1\"" >&2 && echo && print_usage
esac
rm -rf $TMP_DIR
